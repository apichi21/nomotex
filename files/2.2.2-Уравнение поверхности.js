var dimention="3d";
function initPoints() {
    points = [];
}
function initDescr() {
    var descr = "";
    descr += '<label><input type="radio" name="group1" checked onchange="changeCurrentSurface(ell);"> Эллипсоид $$f(x,y,z)=\\frac{x^2}{a^2}+\\frac{y^2}{b^2}+\\frac{z^2}{c^2}-1$$</label>';
    descr += '<label><input type="radio" name="group1" onchange="changeCurrentSurface(hyp);"> Гиперболоид $$f(x,y,z)=\\frac{x^2}{a^2}+\\frac{y^2}{b^2}-\\frac{z^2}{c^2}-1$$</label>';
    descr += '<label><input type="radio" name="group1" onchange="changeCurrentSurface(par);"> Параболоид (гиперболический) $$f(x,y,z)=\\frac{x^2}{a^2}-\\frac{y^2}{b^2}-2cz$$</label>';
    descr += '<label><input type="radio" name="group1" onchange="changeCurrentSurface(con);"> Конус $$f(x,y,z)=\\frac{x^2}{a^2}+\\frac{y^2}{b^2}-\\frac{z^2}{c^2}$$</label>';
    descr += '<label><input type="radio" name="group1" onchange="changeCurrentSurface(hea);"> Сердце $$\\begin{split}f(x,y,z)=(x^2+\\frac{9y^2}{4}+z^2-1)^3-\\\\-x^2z^3-\\frac{9y^2z^3}{80}\\end{split}$$</label>';

    var tIS = 5;
    descr += "<p><table style='text-align: center'>";
    descr += "<tr>"; 
    descr += "<td id='an'>$a$</td>";
    descr += "<td id='bn'>$b$</td>";
    descr += "<td id='cn'>$c$</td>";
    descr += "</tr>";
    descr += "<tr>";
    descr += "<td><input type='text' id='a' size="+tIS+"></td>";
    descr += "<td><input type='text' id='b' size="+tIS+"></td>";
    descr += "<td><input type='text' id='c' size="+tIS+"></td>";
    descr += "</tr>";
    descr += "</table></p>";

    $("#description").html(descr);
    $("#a").change(function(event){currentSurface.a = parseFloat(this.value);initBuffers();});
    $("#b").change(function(event){currentSurface.b = parseFloat(this.value);initBuffers();});
    $("#c").change(function(event){currentSurface.c = parseFloat(this.value);initBuffers();});
    $("Title").html("Уравнение поверхности");
    rotAngY = -100;
    rotAngX = 15;
    changeCurrentSurface(ell);
}
var ell = {a:3.0, b:2.0, c:1.0};
var hyp = {a:2.0, b:1.5, c:2.0};
var par = {a:2.0, b:1.5, c:1.0};
var con = {a:2.0, b:1.5, c:2.0};
var hea = {};

var currentSurface = ell;
function changeCurrentSurface(curve) {
    currentSurface = curve;
    if (currentSurface.a===undefined) {
        $("#a").hide();
        $("#an").hide();
    } else {
        $("#a").show();
        $("#an").show();
        $("#a").val(parseFloat(currentSurface.a.toPrecision(3)));        
    }
    if (currentSurface.b===undefined) {
        $("#b").hide();
        $("#bn").hide();
    } else {
        $("#b").show();
        $("#bn").show();
        $("#b").val(parseFloat(currentSurface.b.toPrecision(3)));        
    }
    if (currentSurface.c===undefined) {
        $("#c").hide();
        $("#cn").hide();
    } else {
        $("#c").show();
        $("#cn").show();
        $("#c").val(parseFloat(currentSurface.c.toPrecision(3)));        
    }
    initBuffers();
}
function initData() {
    // isOrtho = false;
    if (arrPoint != 0) {
        primitives.push({class:"point", text: "", arr0:arrPoint, rad:5, color:[1.0, 0.0, 1.0, 1.0]}); 
    }
    primitives.push({class:"text", text: "x", arr0:[0,0,5]}); 
    primitives.push({class:"text", text: "y", arr0:[5,0,0]}); 
    primitives.push({class:"text", text: "z", arr0:[0,5,0]});
    var vertices = [];
    var indices = [];
    var normals = [];
    var slices1 = 32*2;
    var slices = 16*2;
    var angle = 2*Math.PI;
    switch (currentSurface) {
      case ell:
        vertices[0] = [];
        normals[0] = [];
        for (var i = 0; i <= slices1; i++) {
            var psi = i*angle/slices1;
            for (var j = 0; j <= slices; j++) {
                var phi = j*Math.PI/slices;
                var px = ell.b*Math.sin(phi)*Math.cos(psi);
                var py = ell.c*Math.cos(phi);
                var pz = ell.a*Math.sin(phi)*Math.sin(psi);
                vertices[0].push( px, py, pz );
                var nx = 2*px/ell.b/ell.b;
                var ny = 2*py/ell.c/ell.c;
                var nz = 2*pz/ell.a/ell.a;
                normals[0].push( nx, ny, nz );
            }
        }
        break;
      case hyp:
        vertices[0] = [];
        normals[0] = [];
        for (var i = 0; i <= slices1; i++) {
            var psi = i*angle/slices1;
            for (var j = 0; j <= slices; j++) {
                var phi = (j/slices-0.5)*3;
                var px = hyp.b*Math.cosh(phi)*Math.cos(psi);
                var py = hyp.c*Math.sinh(phi);
                var pz = hyp.a*Math.cosh(phi)*Math.sin(psi);
                vertices[0].push( px, py, pz );
                var nx = 2*px/hyp.b/hyp.b;
                var ny = -2*py/hyp.c/hyp.c;
                var nz = 2*pz/hyp.a/hyp.a;
                normals[0].push( nx, ny, nz );
            }
        }
        break;
      case par:
        vertices[0] = [];
        normals[0] = [];
        for (var i = 0; i <= slices1; i++) {
            var psi = i/slices1*2*Math.PI;
            for (var j = 0; j <= slices; j++) {
                var phi = j/slices*2;
                var px = par.b*phi*Math.cos(psi);
                var py = -phi*phi/2/par.c*(1-2*Math.pow(Math.sin(psi),2));
                var pz = par.a*phi*Math.sin(psi);
                vertices[0].push( px, py, pz );
                var nx = -2*px/par.b/par.b;
                var ny = -2*par.c;
                var nz = 2*pz/par.a/par.a;
                normals[0].push( nx, ny, nz );
            }
        }
        break;
      case con:
        vertices[0] = [];
        normals[0] = [];
        for (var i = 0; i <= slices1; i++) {
            var psi = i*angle/slices1;
            for (var j = 0; j <= slices; j++) {
                var phi = (j/slices-0.5)*3;
                var phi = (j/slices-0.5)*3;
                var px = con.b*phi*Math.cos(psi);
                var py = con.c*phi;
                var pz = con.a*phi*Math.sin(psi);
                vertices[0].push( px, py, pz );
                var nx = 2*px/con.b/con.b;
                var ny = -2*py/con.c/con.c;
                var nz = 2*pz/con.a/con.a;
                normals[0].push( nx, ny, nz );
            }
        }
        break;
      case hea:
        vertices[0] = [];
        normals[0] = [];
        var rads = [
[1, 1.12062, 1.20396, 1.27692, 1.33855, 1.38562, 1.41496, 1.42454, 1.41421, 1.38578, 1.34267, 1.28919, 1.22982, 1.16852, 1.10844, 1.0518, 1, 0.953785, 0.913448, 0.878996, 0.850279, 0.827085, 0.809201, 0.796452, 0.78874, 0.786062, 0.788545, 0.796498, 0.810492, 0.831563, 0.86172, 0.905858, 1],
[1, 1.12015, 1.20287, 1.27494, 1.33536, 1.38099, 1.40876, 1.41685, 1.40528, 1.37602, 1.33256, 1.27919, 1.22031, 1.15977, 1.10059, 1.04491, 0.994049, 0.948713, 0.909174, 0.875433, 0.847344, 0.8247, 0.807296, 0.794969, 0.787624, 0.785267, 0.78803, 0.796222, 0.810416, 0.831642, 0.861897, 0.906053, 1],
[1, 1.11875, 1.19964, 1.26906, 1.32599, 1.36744, 1.39076, 1.39463, 1.37963, 1.34811, 1.30374, 1.25076, 1.1933, 1.1349, 1.07827, 1.02526, 0.977029, 0.934161, 0.896874, 0.86515, 0.838847, 0.817777, 0.801755, 0.790642, 0.784364, 0.782944, 0.786525, 0.795422, 0.810205, 0.831888, 0.862435, 0.906638, 1],
[1, 1.11644, 1.19436, 1.25954, 1.31097, 1.34599, 1.36257, 1.36023, 1.34031, 1.3057, 1.26023, 1.20799, 1.15274, 1.09753, 1.04463, 0.995543, 0.95116, 0.911924, 0.87797, 0.849255, 0.825641, 0.806961, 0.793059, 0.783826, 0.779217, 0.779273, 0.784155, 0.794181, 0.80991, 0.832331, 0.863347, 0.907617, 1],
[1, 1.11325, 1.18718, 1.24678, 1.29113, 1.3181, 1.32653, 1.31692, 1.29149, 1.25363, 1.20726, 1.15619, 1.1037, 1.0523, 1.00379, 0.959268, 0.919384, 0.884412, 0.854407, 0.829293, 0.808934, 0.793184, 0.781917, 0.775051, 0.772568, 0.774531, 0.781112, 0.792626, 0.809615, 0.83302, 0.864656, 0.908996, 1],
[1, 1.10925, 1.17829, 1.23127, 1.26748, 1.28551, 1.28522, 1.26821, 1.23746, 1.19674, 1.14993, 1.10044, 1.05102, 1.00367, 0.959703, 0.919899, 0.884655, 0.854107, 0.828234, 0.806932, 0.790067, 0.777508, 0.769153, 0.764946, 0.76489, 0.769064, 0.77764, 0.790925, 0.809426, 0.834018, 0.866392, 0.910781, 1],
[1, 1.10448, 1.16792, 1.21357, 1.24109, 1.24997, 1.24117, 1.21729, 1.18195, 1.13909, 1.09238, 1.04479, 0.998556, 0.95518, 0.91559, 0.880284, 0.849466, 0.82316, 0.801284, 0.783714, 0.770316, 0.760974, 0.755605, 0.754172, 0.756693, 0.763253, 0.77402, 0.789274, 0.809473, 0.835401, 0.868593, 0.912979, 1],
[1, 1.09903, 1.15634, 1.19427, 1.21304, 1.2131, 1.19653, 1.16675, 1.1278, 1.08361, 1.03751, 0.992028, 0.94891, 0.909257, 0.873683, 0.842464, 0.815663, 0.79322, 0.775015, 0.760911, 0.750778, 0.744512, 0.742047, 0.74336, 0.74848, 0.75749, 0.770542, 0.787881, 0.809895, 0.837252, 0.871295, 0.915597, 1],
[1, 1.09298, 1.14381, 1.17396, 1.18429, 1.1763, 1.15301, 1.11848, 1.07695, 1.03217, 0.987092, 0.943798, 0.903629, 0.867357, 0.835354, 0.807735, 0.784465, 0.765428, 0.750481, 0.739484, 0.732314, 0.728883, 0.729139, 0.733071, 0.740714, 0.752145, 0.767495, 0.786957, 0.810835, 0.839657, 0.874535, 0.918635, 1],
[1, 1.08644, 1.13064, 1.1532, 1.15572, 1.14066, 1.11185, 1.07374, 1.03056, 0.985812, 0.942035, 0.900921, 0.863475, 0.830211, 0.801326, 0.77682, 0.756593, 0.740497, 0.72838, 0.720104, 0.71556, 0.714676, 0.717414, 0.723777, 0.733801, 0.747556, 0.765144, 0.7867, 0.812428, 0.84269, 0.87834, 0.922086, 1],
[1, 1.07953, 1.11713, 1.13253, 1.12808, 1.10707, 1.07393, 1.03329, 0.989263, 0.945006, 0.902696, 0.863685, 0.828707, 0.798086, 0.771892, 0.750048, 0.732414, 0.718826, 0.709133, 0.703206, 0.700952, 0.702315, 0.707275, 0.715846, 0.728069, 0.744002, 0.763714, 0.787277, 0.81478, 0.846404, 0.882713, 0.925924, 1],
[1, 1.07242, 1.10364, 1.1125, 1.10203, 1.07622, 1.03985, 0.997594, 0.953333, 0.909893, 0.869118, 0.83208, 0.799308, 0.770987, 0.747095, 0.72751, 0.712067, 0.700601, 0.692964, 0.689043, 0.688761, 0.692082, 0.699001, 0.709544, 0.723756, 0.741685, 0.763364, 0.788796, 0.817946, 0.8508, 0.887613, 0.93009, 1],
[1, 1.06535, 1.0906, 1.0937, 1.07825, 1.04873, 1.0101, 0.966962, 0.922917, 0.880483, 0.841222, 0.805988, 0.775154, 0.748804, 0.726861, 0.709171, 0.695562, 0.685869, 0.679957, 0.677728, 0.679123, 0.684122, 0.692738, 0.705009, 0.720982, 0.740693, 0.764141, 0.791255, 0.821874, 0.855778, 0.892911, 0.934461, 1],
[1, 1.05867, 1.07863, 1.0769, 1.05753, 1.02529, 0.985225, 0.941744, 0.898196, 0.856826, 0.818972, 0.785319, 0.756132, 0.731427, 0.71109, 0.694954, 0.682842, 0.674597, 0.670098, 0.66926, 0.672043, 0.678441, 0.688484, 0.702219, 0.719695, 0.740938, 0.765908, 0.794464, 0.826321, 0.861058, 0.89832, 0.938806, 1],
[1, 1.05293, 1.0686, 1.06315, 1.04093, 1.00688, 0.966, 0.922525, 0.879573, 0.839176, 0.802507, 0.770136, 0.742252, 0.71883, 0.699735, 0.684792, 0.673829, 0.666696, 0.663283, 0.66352, 0.667378, 0.674869, 0.686032, 0.700922, 0.719591, 0.74205, 0.768229, 0.797921, 0.83073, 0.866059, 0.903291, 0.942709, 1],
[1, 1.04892, 1.0617, 1.05386, 1.0299, 0.994833, 0.953581, 0.910242, 0.86778, 0.828089, 0.792239, 0.760729, 0.733708, 0.711126, 0.69284, 0.678672, 0.668453, 0.662042, 0.659334, 0.660271, 0.664833, 0.673041, 0.684941, 0.700596, 0.720054, 0.743319, 0.770296, 0.800732, 0.834148, 0.869823, 0.906954, 0.945539, 1],
[1, 1.04745, 1.0592, 1.05054, 1.02599, 0.990593, 0.94924, 0.905975, 0.863705, 0.824276, 0.788722, 0.75752, 0.730805, 0.708521, 0.690519, 0.676624, 0.666667, 0.660509, 0.65805, 0.659233, 0.664044, 0.672505, 0.684667, 0.700593, 0.720331, 0.743882, 0.771142, 0.801839, 0.835465, 0.871253, 0.908331, 0.946592, 1],
[1, 1.04892, 1.0617, 1.05386, 1.0299, 0.994833, 0.953581, 0.910242, 0.86778, 0.828089, 0.792239, 0.760729, 0.733708, 0.711126, 0.69284, 0.678672, 0.668453, 0.662042, 0.659334, 0.660271, 0.664833, 0.673041, 0.684941, 0.700596, 0.720054, 0.743319, 0.770296, 0.800732, 0.834148, 0.869823, 0.906954, 0.945539, 1],
[1, 1.05293, 1.0686, 1.06315, 1.04093, 1.00688, 0.966, 0.922525, 0.879573, 0.839176, 0.802507, 0.770136, 0.742252, 0.71883, 0.699735, 0.684792, 0.673829, 0.666696, 0.663283, 0.66352, 0.667378, 0.674869, 0.686032, 0.700922, 0.719591, 0.74205, 0.768229, 0.797921, 0.83073, 0.866059, 0.903291, 0.942709, 1],
[1, 1.05867, 1.07863, 1.0769, 1.05753, 1.02529, 0.985225, 0.941744, 0.898196, 0.856826, 0.818972, 0.785319, 0.756132, 0.731427, 0.71109, 0.694954, 0.682842, 0.674597, 0.670098, 0.66926, 0.672043, 0.678441, 0.688484, 0.702219, 0.719695, 0.740938, 0.765908, 0.794464, 0.826321, 0.861058, 0.89832, 0.938806, 1],
[1, 1.06535, 1.0906, 1.0937, 1.07825, 1.04873, 1.0101, 0.966962, 0.922917, 0.880483, 0.841222, 0.805988, 0.775154, 0.748804, 0.726861, 0.709171, 0.695562, 0.685869, 0.679957, 0.677728, 0.679123, 0.684122, 0.692738, 0.705009, 0.720982, 0.740693, 0.764141, 0.791255, 0.821874, 0.855778, 0.892911, 0.934461, 1],
[1, 1.07242, 1.10364, 1.1125, 1.10203, 1.07622, 1.03985, 0.997594, 0.953333, 0.909893, 0.869118, 0.83208, 0.799308, 0.770987, 0.747095, 0.72751, 0.712067, 0.700601, 0.692964, 0.689043, 0.688761, 0.692082, 0.699001, 0.709544, 0.723756, 0.741685, 0.763364, 0.788796, 0.817946, 0.8508, 0.887613, 0.93009, 1],
[1, 1.07953, 1.11713, 1.13253, 1.12808, 1.10707, 1.07393, 1.03329, 0.989263, 0.945006, 0.902696, 0.863685, 0.828707, 0.798086, 0.771892, 0.750048, 0.732414, 0.718826, 0.709133, 0.703206, 0.700952, 0.702315, 0.707275, 0.715846, 0.728069, 0.744002, 0.763714, 0.787277, 0.81478, 0.846404, 0.882713, 0.925924, 1],
[1, 1.08644, 1.13064, 1.1532, 1.15572, 1.14066, 1.11185, 1.07374, 1.03056, 0.985812, 0.942035, 0.900921, 0.863475, 0.830211, 0.801326, 0.77682, 0.756593, 0.740497, 0.72838, 0.720104, 0.71556, 0.714676, 0.717414, 0.723777, 0.733801, 0.747556, 0.765144, 0.7867, 0.812428, 0.84269, 0.87834, 0.922086, 1],
[1, 1.09298, 1.14381, 1.17396, 1.18429, 1.1763, 1.15301, 1.11848, 1.07695, 1.03217, 0.987092, 0.943798, 0.903629, 0.867357, 0.835354, 0.807735, 0.784465, 0.765428, 0.750481, 0.739484, 0.732314, 0.728883, 0.729139, 0.733071, 0.740714, 0.752145, 0.767495, 0.786957, 0.810835, 0.839657, 0.874535, 0.918635, 1],
[1, 1.09903, 1.15634, 1.19427, 1.21304, 1.2131, 1.19653, 1.16675, 1.1278, 1.08361, 1.03751, 0.992028, 0.94891, 0.909257, 0.873683, 0.842464, 0.815663, 0.79322, 0.775015, 0.760911, 0.750778, 0.744512, 0.742047, 0.74336, 0.74848, 0.75749, 0.770542, 0.787881, 0.809895, 0.837252, 0.871295, 0.915597, 1],
[1, 1.10448, 1.16792, 1.21357, 1.24109, 1.24997, 1.24117, 1.21729, 1.18195, 1.13909, 1.09238, 1.04479, 0.998556, 0.95518, 0.91559, 0.880284, 0.849466, 0.82316, 0.801284, 0.783714, 0.770316, 0.760974, 0.755605, 0.754172, 0.756693, 0.763253, 0.77402, 0.789274, 0.809473, 0.835401, 0.868593, 0.912979, 1],
[1, 1.10925, 1.17829, 1.23127, 1.26748, 1.28551, 1.28522, 1.26821, 1.23746, 1.19674, 1.14993, 1.10044, 1.05102, 1.00367, 0.959703, 0.919899, 0.884655, 0.854107, 0.828234, 0.806932, 0.790067, 0.777508, 0.769153, 0.764946, 0.76489, 0.769064, 0.77764, 0.790925, 0.809426, 0.834018, 0.866392, 0.910781, 1],
[1, 1.11325, 1.18718, 1.24678, 1.29113, 1.3181, 1.32653, 1.31692, 1.29149, 1.25363, 1.20726, 1.15619, 1.1037, 1.0523, 1.00379, 0.959268, 0.919384, 0.884412, 0.854407, 0.829293, 0.808934, 0.793184, 0.781917, 0.775051, 0.772568, 0.774531, 0.781112, 0.792626, 0.809615, 0.83302, 0.864656, 0.908996, 1],
[1, 1.11644, 1.19436, 1.25954, 1.31097, 1.34599, 1.36257, 1.36023, 1.34031, 1.3057, 1.26023, 1.20799, 1.15274, 1.09753, 1.04463, 0.995543, 0.95116, 0.911924, 0.87797, 0.849255, 0.825641, 0.806961, 0.793059, 0.783826, 0.779217, 0.779273, 0.784155, 0.794181, 0.80991, 0.832331, 0.863347, 0.907617, 1],
[1, 1.11875, 1.19964, 1.26906, 1.32599, 1.36744, 1.39076, 1.39463, 1.37963, 1.34811, 1.30374, 1.25076, 1.1933, 1.1349, 1.07827, 1.02526, 0.977029, 0.934161, 0.896874, 0.86515, 0.838847, 0.817777, 0.801755, 0.790642, 0.784364, 0.782944, 0.786525, 0.795422, 0.810205, 0.831888, 0.862435, 0.906638, 1],
[1, 1.12015, 1.20287, 1.27494, 1.33536, 1.38099, 1.40876, 1.41685, 1.40528, 1.37602, 1.33256, 1.27919, 1.22031, 1.15977, 1.10059, 1.04491, 0.994049, 0.948713, 0.909174, 0.875433, 0.847344, 0.8247, 0.807296, 0.794969, 0.787624, 0.785267, 0.78803, 0.796222, 0.810416, 0.831642, 0.861897, 0.906053, 1],
[1, 1.12062, 1.20396, 1.27692, 1.33855, 1.38562, 1.41496, 1.42454, 1.41421, 1.38578, 1.34267, 1.28919, 1.22982, 1.16852, 1.10844, 1.0518, 1, 0.953785, 0.913448, 0.878996, 0.850279, 0.827085, 0.809201, 0.796452, 0.78874, 0.786062, 0.788545, 0.796498, 0.810492, 0.831563, 0.86172, 0.905858, 1],
[1, 1.12015, 1.20287, 1.27494, 1.33536, 1.38099, 1.40876, 1.41685, 1.40528, 1.37602, 1.33256, 1.27919, 1.22031, 1.15977, 1.10059, 1.04491, 0.994049, 0.948713, 0.909174, 0.875433, 0.847344, 0.8247, 0.807296, 0.794969, 0.787624, 0.785267, 0.78803, 0.796222, 0.810416, 0.831642, 0.861897, 0.906053, 1],
[1, 1.11875, 1.19964, 1.26906, 1.32599, 1.36744, 1.39076, 1.39463, 1.37963, 1.34811, 1.30374, 1.25076, 1.1933, 1.1349, 1.07827, 1.02526, 0.977029, 0.934161, 0.896874, 0.86515, 0.838847, 0.817777, 0.801755, 0.790642, 0.784364, 0.782944, 0.786525, 0.795422, 0.810205, 0.831888, 0.862435, 0.906638, 1],
[1, 1.11644, 1.19436, 1.25954, 1.31097, 1.34599, 1.36257, 1.36023, 1.34031, 1.3057, 1.26023, 1.20799, 1.15274, 1.09753, 1.04463, 0.995543, 0.95116, 0.911924, 0.87797, 0.849255, 0.825641, 0.806961, 0.793059, 0.783826, 0.779217, 0.779273, 0.784155, 0.794181, 0.80991, 0.832331, 0.863347, 0.907617, 1],
[1, 1.11325, 1.18718, 1.24678, 1.29113, 1.3181, 1.32653, 1.31692, 1.29149, 1.25363, 1.20726, 1.15619, 1.1037, 1.0523, 1.00379, 0.959268, 0.919384, 0.884412, 0.854407, 0.829293, 0.808934, 0.793184, 0.781917, 0.775051, 0.772568, 0.774531, 0.781112, 0.792626, 0.809615, 0.83302, 0.864656, 0.908996, 1],
[1, 1.10925, 1.17829, 1.23127, 1.26748, 1.28551, 1.28522, 1.26821, 1.23746, 1.19674, 1.14993, 1.10044, 1.05102, 1.00367, 0.959703, 0.919899, 0.884655, 0.854107, 0.828234, 0.806932, 0.790067, 0.777508, 0.769153, 0.764946, 0.76489, 0.769064, 0.77764, 0.790925, 0.809426, 0.834018, 0.866392, 0.910781, 1],
[1, 1.10448, 1.16792, 1.21357, 1.24109, 1.24997, 1.24117, 1.21729, 1.18195, 1.13909, 1.09238, 1.04479, 0.998556, 0.95518, 0.91559, 0.880284, 0.849466, 0.82316, 0.801284, 0.783714, 0.770316, 0.760974, 0.755605, 0.754172, 0.756693, 0.763253, 0.77402, 0.789274, 0.809473, 0.835401, 0.868593, 0.912979, 1],
[1, 1.09903, 1.15634, 1.19427, 1.21304, 1.2131, 1.19653, 1.16675, 1.1278, 1.08361, 1.03751, 0.992028, 0.94891, 0.909257, 0.873683, 0.842464, 0.815663, 0.79322, 0.775015, 0.760911, 0.750778, 0.744512, 0.742047, 0.74336, 0.74848, 0.75749, 0.770542, 0.787881, 0.809895, 0.837252, 0.871295, 0.915597, 1],
[1, 1.09298, 1.14381, 1.17396, 1.18429, 1.1763, 1.15301, 1.11848, 1.07695, 1.03217, 0.987092, 0.943798, 0.903629, 0.867357, 0.835354, 0.807735, 0.784465, 0.765428, 0.750481, 0.739484, 0.732314, 0.728883, 0.729139, 0.733071, 0.740714, 0.752145, 0.767495, 0.786957, 0.810835, 0.839657, 0.874535, 0.918635, 1],
[1, 1.08644, 1.13064, 1.1532, 1.15572, 1.14066, 1.11185, 1.07374, 1.03056, 0.985812, 0.942035, 0.900921, 0.863475, 0.830211, 0.801326, 0.77682, 0.756593, 0.740497, 0.72838, 0.720104, 0.71556, 0.714676, 0.717414, 0.723777, 0.733801, 0.747556, 0.765144, 0.7867, 0.812428, 0.84269, 0.87834, 0.922086, 1],
[1, 1.07953, 1.11713, 1.13253, 1.12808, 1.10707, 1.07393, 1.03329, 0.989263, 0.945006, 0.902696, 0.863685, 0.828707, 0.798086, 0.771892, 0.750048, 0.732414, 0.718826, 0.709133, 0.703206, 0.700952, 0.702315, 0.707275, 0.715846, 0.728069, 0.744002, 0.763714, 0.787277, 0.81478, 0.846404, 0.882713, 0.925924, 1],
[1, 1.07242, 1.10364, 1.1125, 1.10203, 1.07622, 1.03985, 0.997594, 0.953333, 0.909893, 0.869118, 0.83208, 0.799308, 0.770987, 0.747095, 0.72751, 0.712067, 0.700601, 0.692964, 0.689043, 0.688761, 0.692082, 0.699001, 0.709544, 0.723756, 0.741685, 0.763364, 0.788796, 0.817946, 0.8508, 0.887613, 0.93009, 1],
[1, 1.06535, 1.0906, 1.0937, 1.07825, 1.04873, 1.0101, 0.966962, 0.922917, 0.880483, 0.841222, 0.805988, 0.775154, 0.748804, 0.726861, 0.709171, 0.695562, 0.685869, 0.679957, 0.677728, 0.679123, 0.684122, 0.692738, 0.705009, 0.720982, 0.740693, 0.764141, 0.791255, 0.821874, 0.855778, 0.892911, 0.934461, 1],
[1, 1.05867, 1.07863, 1.0769, 1.05753, 1.02529, 0.985225, 0.941744, 0.898196, 0.856826, 0.818972, 0.785319, 0.756132, 0.731427, 0.71109, 0.694954, 0.682842, 0.674597, 0.670098, 0.66926, 0.672043, 0.678441, 0.688484, 0.702219, 0.719695, 0.740938, 0.765908, 0.794464, 0.826321, 0.861058, 0.89832, 0.938806, 1],
[1, 1.05293, 1.0686, 1.06315, 1.04093, 1.00688, 0.966, 0.922525, 0.879573, 0.839176, 0.802507, 0.770136, 0.742252, 0.71883, 0.699735, 0.684792, 0.673829, 0.666696, 0.663283, 0.66352, 0.667378, 0.674869, 0.686032, 0.700922, 0.719591, 0.74205, 0.768229, 0.797921, 0.83073, 0.866059, 0.903291, 0.942709, 1],
[1, 1.04892, 1.0617, 1.05386, 1.0299, 0.994833, 0.953581, 0.910242, 0.86778, 0.828089, 0.792239, 0.760729, 0.733708, 0.711126, 0.69284, 0.678672, 0.668453, 0.662042, 0.659334, 0.660271, 0.664833, 0.673041, 0.684941, 0.700596, 0.720054, 0.743319, 0.770296, 0.800732, 0.834148, 0.869823, 0.906954, 0.945539, 1],
[1, 1.04745, 1.0592, 1.05054, 1.02599, 0.990593, 0.94924, 0.905975, 0.863705, 0.824276, 0.788722, 0.75752, 0.730805, 0.708521, 0.690519, 0.676624, 0.666667, 0.660509, 0.65805, 0.659233, 0.664044, 0.672505, 0.684667, 0.700593, 0.720331, 0.743882, 0.771142, 0.801839, 0.835465, 0.871253, 0.908331, 0.946592, 1],
[1, 1.04892, 1.0617, 1.05386, 1.0299, 0.994833, 0.953581, 0.910242, 0.86778, 0.828089, 0.792239, 0.760729, 0.733708, 0.711126, 0.69284, 0.678672, 0.668453, 0.662042, 0.659334, 0.660271, 0.664833, 0.673041, 0.684941, 0.700596, 0.720054, 0.743319, 0.770296, 0.800732, 0.834148, 0.869823, 0.906954, 0.945539, 1],
[1, 1.05293, 1.0686, 1.06315, 1.04093, 1.00688, 0.966, 0.922525, 0.879573, 0.839176, 0.802507, 0.770136, 0.742252, 0.71883, 0.699735, 0.684792, 0.673829, 0.666696, 0.663283, 0.66352, 0.667378, 0.674869, 0.686032, 0.700922, 0.719591, 0.74205, 0.768229, 0.797921, 0.83073, 0.866059, 0.903291, 0.942709, 1],
[1, 1.05867, 1.07863, 1.0769, 1.05753, 1.02529, 0.985225, 0.941744, 0.898196, 0.856826, 0.818972, 0.785319, 0.756132, 0.731427, 0.71109, 0.694954, 0.682842, 0.674597, 0.670098, 0.66926, 0.672043, 0.678441, 0.688484, 0.702219, 0.719695, 0.740938, 0.765908, 0.794464, 0.826321, 0.861058, 0.89832, 0.938806, 1],
[1, 1.06535, 1.0906, 1.0937, 1.07825, 1.04873, 1.0101, 0.966962, 0.922917, 0.880483, 0.841222, 0.805988, 0.775154, 0.748804, 0.726861, 0.709171, 0.695562, 0.685869, 0.679957, 0.677728, 0.679123, 0.684122, 0.692738, 0.705009, 0.720982, 0.740693, 0.764141, 0.791255, 0.821874, 0.855778, 0.892911, 0.934461, 1],
[1, 1.07242, 1.10364, 1.1125, 1.10203, 1.07622, 1.03985, 0.997594, 0.953333, 0.909893, 0.869118, 0.83208, 0.799308, 0.770987, 0.747095, 0.72751, 0.712067, 0.700601, 0.692964, 0.689043, 0.688761, 0.692082, 0.699001, 0.709544, 0.723756, 0.741685, 0.763364, 0.788796, 0.817946, 0.8508, 0.887613, 0.93009, 1],
[1, 1.07953, 1.11713, 1.13253, 1.12808, 1.10707, 1.07393, 1.03329, 0.989263, 0.945006, 0.902696, 0.863685, 0.828707, 0.798086, 0.771892, 0.750048, 0.732414, 0.718826, 0.709133, 0.703206, 0.700952, 0.702315, 0.707275, 0.715846, 0.728069, 0.744002, 0.763714, 0.787277, 0.81478, 0.846404, 0.882713, 0.925924, 1],
[1, 1.08644, 1.13064, 1.1532, 1.15572, 1.14066, 1.11185, 1.07374, 1.03056, 0.985812, 0.942035, 0.900921, 0.863475, 0.830211, 0.801326, 0.77682, 0.756593, 0.740497, 0.72838, 0.720104, 0.71556, 0.714676, 0.717414, 0.723777, 0.733801, 0.747556, 0.765144, 0.7867, 0.812428, 0.84269, 0.87834, 0.922086, 1],
[1, 1.09298, 1.14381, 1.17396, 1.18429, 1.1763, 1.15301, 1.11848, 1.07695, 1.03217, 0.987092, 0.943798, 0.903629, 0.867357, 0.835354, 0.807735, 0.784465, 0.765428, 0.750481, 0.739484, 0.732314, 0.728883, 0.729139, 0.733071, 0.740714, 0.752145, 0.767495, 0.786957, 0.810835, 0.839657, 0.874535, 0.918635, 1],
[1, 1.09903, 1.15634, 1.19427, 1.21304, 1.2131, 1.19653, 1.16675, 1.1278, 1.08361, 1.03751, 0.992028, 0.94891, 0.909257, 0.873683, 0.842464, 0.815663, 0.79322, 0.775015, 0.760911, 0.750778, 0.744512, 0.742047, 0.74336, 0.74848, 0.75749, 0.770542, 0.787881, 0.809895, 0.837252, 0.871295, 0.915597, 1],
[1, 1.10448, 1.16792, 1.21357, 1.24109, 1.24997, 1.24117, 1.21729, 1.18195, 1.13909, 1.09238, 1.04479, 0.998556, 0.95518, 0.91559, 0.880284, 0.849466, 0.82316, 0.801284, 0.783714, 0.770316, 0.760974, 0.755605, 0.754172, 0.756693, 0.763253, 0.77402, 0.789274, 0.809473, 0.835401, 0.868593, 0.912979, 1],
[1, 1.10925, 1.17829, 1.23127, 1.26748, 1.28551, 1.28522, 1.26821, 1.23746, 1.19674, 1.14993, 1.10044, 1.05102, 1.00367, 0.959703, 0.919899, 0.884655, 0.854107, 0.828234, 0.806932, 0.790067, 0.777508, 0.769153, 0.764946, 0.76489, 0.769064, 0.77764, 0.790925, 0.809426, 0.834018, 0.866392, 0.910781, 1],
[1, 1.11325, 1.18718, 1.24678, 1.29113, 1.3181, 1.32653, 1.31692, 1.29149, 1.25363, 1.20726, 1.15619, 1.1037, 1.0523, 1.00379, 0.959268, 0.919384, 0.884412, 0.854407, 0.829293, 0.808934, 0.793184, 0.781917, 0.775051, 0.772568, 0.774531, 0.781112, 0.792626, 0.809615, 0.83302, 0.864656, 0.908996, 1],
[1, 1.11644, 1.19436, 1.25954, 1.31097, 1.34599, 1.36257, 1.36023, 1.34031, 1.3057, 1.26023, 1.20799, 1.15274, 1.09753, 1.04463, 0.995543, 0.95116, 0.911924, 0.87797, 0.849255, 0.825641, 0.806961, 0.793059, 0.783826, 0.779217, 0.779273, 0.784155, 0.794181, 0.80991, 0.832331, 0.863347, 0.907617, 1],
[1, 1.11875, 1.19964, 1.26906, 1.32599, 1.36744, 1.39076, 1.39463, 1.37963, 1.34811, 1.30374, 1.25076, 1.1933, 1.1349, 1.07827, 1.02526, 0.977029, 0.934161, 0.896874, 0.86515, 0.838847, 0.817777, 0.801755, 0.790642, 0.784364, 0.782944, 0.786525, 0.795422, 0.810205, 0.831888, 0.862435, 0.906638, 1],
[1, 1.12015, 1.20287, 1.27494, 1.33536, 1.38099, 1.40876, 1.41685, 1.40528, 1.37602, 1.33256, 1.27919, 1.22031, 1.15977, 1.10059, 1.04491, 0.994049, 0.948713, 0.909174, 0.875433, 0.847344, 0.8247, 0.807296, 0.794969, 0.787624, 0.785267, 0.78803, 0.796222, 0.810416, 0.831642, 0.861897, 0.906053, 1],
[1, 1.12062, 1.20396, 1.27692, 1.33855, 1.38562, 1.41496, 1.42454, 1.41421, 1.38578, 1.34267, 1.28919, 1.22982, 1.16852, 1.10844, 1.0518, 1, 0.953785, 0.913448, 0.878996, 0.850279, 0.827085, 0.809201, 0.796452, 0.78874, 0.786062, 0.788545, 0.796498, 0.810492, 0.831563, 0.86172, 0.905858, 1]
        ];
        slices1 = rads.length-1;
        slices = rads[0].length-1;
        for (var i = 0; i < rads.length; i++) {
            var psi = i/(rads.length-1)*2*Math.PI;
            for (var j = 0; j < rads[i].length; j++) {
                var phi = j/(rads[i].length-1)*Math.PI;
                var px = rads[i][j]*Math.cos(psi)*Math.sin(phi);
                var py = rads[i][j]*Math.sin(psi)*Math.sin(phi);
                var pz = rads[i][j]              *Math.cos(phi);
                vertices[0].push( py, pz, px );
                var nx = 6*Math.pow(px*px+(9/4)*py*py+pz*pz-1,2.0)*px-2*px*pz*pz*pz;
                var ny = (27/2)*Math.pow(px*px+(9/4)*py*py+pz*pz-1,2.0)*py-(9/40)*py*pz*pz*pz;
                var nz = 6*Math.pow(px*px+(9/4)*py*py+pz*pz-1,2.0)*pz-3*px*px*pz*pz-(27/80)*py*py*pz*pz;
                normals[0].push( ny, nz, nx );
            }
        }
        break;
    }

    var colorp = [0.0, 0.8, 0.0, 1.0];
    var colorl = [0.0, 0.0, 0.0, 1.0];
    for (var k = 0; k < vertices.length; k++) {
        indices[k] = [];
        for (var i=0; i < slices1; i++) {
            for (var j=0; j < slices; j++) {
                var aa = [i*(slices+1)+j, i*(slices+1)+j+1, (i+1)*(slices+1)+j+1, (i+1)*(slices+1)+j];
                indices[k].push(aa[0],aa[1],aa[2],aa[0],aa[2],aa[3]);
            }
        }
        if (!normals[k]) {
            normals[k] = [];
            for (var i = 0; i <= slices1; i++) {
                for (var j = 0; j <= slices; j++) {
                    normals[k].push( 0.0, 0.0, 1.0 );
                }
            }
        }
        meshes.push({
            vertices:vertices[k], 
            normals:normals[k], 
            indices:indices[k], 
            color:colorp,
            reinit:true
        });
        for (var i=0; i < slices1; i++) {
            for (var j=0; j < slices; j++) {
                var aa = [i*(slices+1)+j, i*(slices+1)+j+1, (i+1)*(slices+1)+j+1, (i+1)*(slices+1)+j];
                if (i%16==0) {
                    primitives.push({class:"line", text: "", arr0:[vertices[k][aa[0]*3],vertices[k][aa[0]*3+1],vertices[k][aa[0]*3+2]], arr1:[vertices[k][aa[1]*3],vertices[k][aa[1]*3+1],vertices[k][aa[1]*3+2]], rad:1, color:colorl});
                }
                if (j%16==15) {
                    primitives.push({class:"line", text: "", arr0:[vertices[k][aa[1]*3],vertices[k][aa[1]*3+1],vertices[k][aa[1]*3+2]], arr1:[vertices[k][aa[2]*3],vertices[k][aa[2]*3+1],vertices[k][aa[2]*3+2]], rad:1, color:colorl});
                }
                if (j==0) {
                    primitives.push({class:"line", text: "", arr0:[vertices[k][aa[0]*3],vertices[k][aa[0]*3+1],vertices[k][aa[0]*3+2]], arr1:[vertices[k][aa[3]*3],vertices[k][aa[3]*3+1],vertices[k][aa[3]*3+2]], rad:1, color:colorl});
                }
            }
        }
        // for (var i=0; i < slices1; i++) {
        //     for (var j=0; j < slices; j++) {
        //         var aa = [i*(slices+1)+j, i*(slices+1)+j+1, (i+1)*(slices+1)+j+1, (i+1)*(slices+1)+j];
        //         primitives.push({class:"line", text: "", arr0:[vertices[k][aa[0]*3],vertices[k][aa[0]*3+1],vertices[k][aa[0]*3+2]], arr1:[vertices[k][aa[1]*3],vertices[k][aa[1]*3+1],vertices[k][aa[1]*3+2]], rad:1, color:colorl});
        //         primitives.push({class:"line", text: "", arr0:[vertices[k][aa[2]*3],vertices[k][aa[2]*3+1],vertices[k][aa[2]*3+2]], arr1:[vertices[k][aa[3]*3],vertices[k][aa[3]*3+1],vertices[k][aa[3]*3+2]], rad:1, color:colorl});
        //         primitives.push({class:"line", text: "", arr0:[vertices[k][aa[1]*3],vertices[k][aa[1]*3+1],vertices[k][aa[1]*3+2]], arr1:[vertices[k][aa[2]*3],vertices[k][aa[2]*3+1],vertices[k][aa[2]*3+2]], rad:1, color:colorl});
        //         primitives.push({class:"line", text: "", arr0:[vertices[k][aa[0]*3],vertices[k][aa[0]*3+1],vertices[k][aa[0]*3+2]], arr1:[vertices[k][aa[3]*3],vertices[k][aa[3]*3+1],vertices[k][aa[3]*3+2]], rad:1, color:colorl});
        //     }
        // }
    }
}