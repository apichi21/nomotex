var dimention="2d";
function initPoints() {
    points = [];
}
function initDescr() {
    var descr = '';
    descr += '<label><input type="radio" name="group1" checked onchange="changeCurrentCurve(ell);"> Эллипс $$f(x,y)=\\frac{x^2}{a^2}+\\frac{y^2}{b^2}-1$$</label>';
    descr += '<label><input type="radio" name="group1" onchange="changeCurrentCurve(hyp);"> Гипербола $$f(x,y)=\\frac{x^2}{a^2}-\\frac{y^2}{b^2}-1$$</label>';
    descr += '<label><input type="radio" name="group1" onchange="changeCurrentCurve(par);"> Парабола $$f(x,y)=y-ax^2-bx-c$$</label>';
    descr += '<label><input type="radio" name="group1" onchange="changeCurrentCurve(hea);"> Сердце $$f(x,y)=\\left(x^2+y^2-1\\right)^3-x^2y^2$$</label>';
    descr += '<label><input type="radio" name="group1" onchange="changeCurrentCurve(lem);"> Лемниската Бернулли $$f(x,y)=\\left(x^2+y^2\\right)^2-2a^2\\left(x^2-y^2\\right)$$</label>';
    descr += '<label><input type="radio" name="group1" onchange="changeCurrentCurve(cyc);"> Гипоциклоида $$f(x,y)=x^\\frac{2}{3}+y^\\frac{2}{3}-a^\\frac{2}{3}$$</label>';
    descr += '<label><input type="radio" name="group1" onchange="changeCurrentCurve(fol);"> Декартов лист $$f(x,y)=x^3+y^3-3axy$$</label>';

    var tIS = 5;
    descr += "<p><table style='text-align: center'>";
    descr += "<tr>"; 
    descr += "<td id='an'>$a$</td>";
    descr += "<td id='bn'>$b$</td>";
    descr += "<td id='cn'>$c$</td>";
    descr += "</tr>";
    descr += "<tr>";
    descr += "<td><input type='text' id='a' size="+tIS+"></td>";
    descr += "<td><input type='text' id='b' size="+tIS+"></td>";
    descr += "<td><input type='text' id='c' size="+tIS+"></td>";
    descr += "</tr>";
    descr += "</table></p>";

    $("#description").html(descr);
    $("#a").change(function(event){currentCurve.a = parseFloat(this.value);initBuffers();});
    $("#b").change(function(event){currentCurve.b = parseFloat(this.value);initBuffers();});
    $("#c").change(function(event){currentCurve.c = parseFloat(this.value);initBuffers();});
    $("Title").html("Уравнение линии");
    changeCurrentCurve(ell);
}
var ell = {a:3.0, b:2.0};
var hyp = {a:3.0, b:2.0};
var par = {a:1.0, b:2.0, c:-3.0};
var lem = {a:3.0};
var cyc = {a:3.0};
var fol = {a:2.0};
var hea = {};
var currentCurve = ell;
function changeCurrentCurve(curve) {
    currentCurve = curve;
    if (currentCurve.a===undefined) {
        $("#a").hide();
        $("#an").hide();
    } else {
        $("#a").show();
        $("#an").show();
        $("#a").val(parseFloat(currentCurve.a.toPrecision(3)));        
    }
    if (currentCurve.b===undefined) {
        $("#b").hide();
        $("#bn").hide();
    } else {
        $("#b").show();
        $("#bn").show();
        $("#b").val(parseFloat(currentCurve.b.toPrecision(3)));        
    }
    if (currentCurve.c===undefined) {
        $("#c").hide();
        $("#cn").hide();
    } else {
        $("#c").show();
        $("#cn").show();
        $("#c").val(parseFloat(currentCurve.c.toPrecision(3)));        
    }
    initBuffers();
}
function initData() {
    var arrRad = 2;
    var chosenPointRad = 5;
    if (arrPoint != 0) {
        primitives.push({class:"point", text: "", arr0:arrPoint, rad:chosenPointRad+2, color:[1.0, 0.0, 1.0, 1.0]});
    }
    primitives.push({class:"text", text: "O", pos: "rt",arr0:[0,0,0]});
    let vertices = [];
    let baseSlices = 160;

    switch (currentCurve) {
      case ell:
        vertices[0] = [];
        var slices = baseSlices;
        for (var i = 0; i <= slices; i++) {
            var psi = i*2*Math.PI/slices;
            vertices[0].push( [ell.a*Math.cos(psi), ell.b*Math.sin(psi),0.0] );
        }
        break;
      case hyp:
        var slices = baseSlices/2;
        vertices[0] = [];
        for (var i = 0; i <= slices; i++) {
            var psi = (i/slices-0.5)*5;
            vertices[0].push( [hyp.a*Math.cosh(psi),hyp.b*Math.sinh(psi),0.0] );
        }
        vertices[1] = [];
        for (var i = 0; i <= slices; i++) {
            var psi = (i/slices-0.5)*5;
            vertices[1].push( [-hyp.a*Math.cosh(psi),hyp.b*Math.sinh(psi),0.0] );
        }
        break;
      case par:
        var slices = baseSlices;
        var maxLen0 = 10*2;
        var maxLen = maxLen0;
        if (maxLen*maxLen*Math.abs(par.a) > maxLen) {
            maxLen = Math.sqrt(maxLen/Math.abs(par.a));
        }
        vertices[0] = [];
        for (var i = 0; i <= slices; i++) {
            var psi = (i/slices-0.5)*maxLen*2;
            vertices[0].push( [psi - par.b/2/par.a,
                               psi*psi*par.a - (par.b*par.b-4*par.a*par.c)/4/par.a,
                               0.0] );
        }
        break;
      case lem:
        vertices[0] = [];
        vertices[1] = [];
        var slices = baseSlices/2;
        for (var i = 0; i <= slices; i++) {
            var psi = i*2/slices-1;
            vertices[0].push( [lem.a*Math.sqrt(2)*(psi+psi*psi*psi)/(1+psi*psi*psi*psi), lem.a*Math.sqrt(2)*(psi-psi*psi*psi)/(1+psi*psi*psi*psi),0.0] );
            vertices[1].push( [lem.a*Math.sqrt(2)*(psi+psi*psi*psi)/(1+psi*psi*psi*psi), -lem.a*Math.sqrt(2)*(psi-psi*psi*psi)/(1+psi*psi*psi*psi),0.0] );
        }
        break;
      case cyc:
        vertices[0] = [];
        var slices = baseSlices;
        var k = 4;
        var r = cyc.a/k;

        for (var i = 0; i <= slices; i++) {
            var psi = i*2*Math.PI/slices;
            vertices[0].push( [r*(k-1)*(Math.cos(psi)+Math.cos((k-1)*psi)/(k-1)), r*(k-1)*(Math.sin(psi)-Math.sin((k-1)*psi)/(k-1)),0.0] );
        }
        break;
      case fol:
        vertices[0] = [];
        var slices = baseSlices;
        var maxPsi = Math.PI/4.3;
        for (var i = 0; i <= slices; i++) {
            // var psi = Math.tan(i*Math.PI/2/slices-Math.PI/4);
            var psi = Math.tan(i*(Math.PI/2+2*maxPsi)/slices-maxPsi);
            vertices[0].push( [3*fol.a*psi/(1+psi*psi*psi), 3*fol.a*psi*psi/(1+psi*psi*psi), 0.0] );
        }
        break;
      case hea:
        vertices[0] = [];
        var rads = [
1, 1.00197, 1.00394, 1.00593, 1.00793, 1.00993, 1.01194, 1.01396, 1.01599, 1.01803, 1.02008, 1.02214, 1.0242, 1.02627, 1.02835, 1.03044, 1.03254, 1.03465, 1.03677, 1.03889, 1.04102, 1.04316, 1.04531, 1.04746, 1.04963, 1.0518, 1.05398, 1.05617, 1.05836, 1.06056, 1.06277, 1.06499, 1.06722, 1.06945, 1.07169, 1.07394, 1.07619, 1.07845, 1.08072, 1.08299, 1.08527, 1.08756, 1.08986, 1.09216, 1.09446, 1.09678, 1.0991, 1.10142, 1.10376, 1.10609, 1.10844, 1.11079, 1.11314, 1.1155, 1.11787, 1.12024, 1.12261, 1.12499, 1.12738, 1.12977, 1.13216, 1.13456, 1.13696, 1.13937, 1.14178, 1.14419, 1.14661, 1.14903, 1.15146, 1.15389, 1.15632, 1.15875, 1.16119, 1.16363, 1.16607, 1.16852, 1.17096, 1.17341, 1.17586, 1.17831, 1.18077, 1.18322, 1.18568, 1.18813, 1.19059, 1.19305, 1.1955, 1.19796, 1.20042, 1.20287, 1.20533, 1.20779, 1.21024, 1.21269, 1.21515, 1.2176, 1.22005, 1.22249, 1.22494, 1.22738, 1.22982, 1.23225, 1.23469, 1.23711, 1.23954, 1.24196, 1.24438, 1.24679, 1.2492, 1.25161, 1.254, 1.2564, 1.25879, 1.26117, 1.26354, 1.26591, 1.26827, 1.27063, 1.27298, 1.27532, 1.27765, 1.27998, 1.28229, 1.2846, 1.2869, 1.28919, 1.29147, 1.29375, 1.29601, 1.29826, 1.3005, 1.30273, 1.30495, 1.30716, 1.30935, 1.31154, 1.31371, 1.31587, 1.31801, 1.32015, 1.32227, 1.32437, 1.32647, 1.32854, 1.33061, 1.33266, 1.33469, 1.33671, 1.33871, 1.3407, 1.34267, 1.34462, 1.34656, 1.34848, 1.35038, 1.35226, 1.35413, 1.35598, 1.35781, 1.35962, 1.36141, 1.36318, 1.36493, 1.36667, 1.36838, 1.37007, 1.37174, 1.37339, 1.37502, 1.37662, 1.3782, 1.37977, 1.3813, 1.38282, 1.38431, 1.38578, 1.38723, 1.38865, 1.39005, 1.39142, 1.39277, 1.3941, 1.39539, 1.39667, 1.39792, 1.39914, 1.40033, 1.4015, 1.40265, 1.40376, 1.40485, 1.40591, 1.40695, 1.40796, 1.40893, 1.40989, 1.41081, 1.4117, 1.41257, 1.41341, 1.41421, 1.41499, 1.41574, 1.41646, 1.41715, 1.41781, 1.41844, 1.41904, 1.41961, 1.42015, 1.42066, 1.42114, 1.42159, 1.422, 1.42239, 1.42274, 1.42306, 1.42335, 1.42361, 1.42384, 1.42404, 1.4242, 1.42434, 1.42444, 1.4245, 1.42454, 1.42455, 1.42452, 1.42446, 1.42437, 1.42424, 1.42408, 1.42389, 1.42367, 1.42342, 1.42313, 1.42281, 1.42246, 1.42208, 1.42166, 1.42121, 1.42073, 1.42022, 1.41967, 1.4191, 1.41849, 1.41784, 1.41717, 1.41646, 1.41573, 1.41496, 1.41415, 1.41332, 1.41245, 1.41156, 1.41063, 1.40967, 1.40868, 1.40765, 1.4066, 1.40552, 1.4044, 1.40325, 1.40208, 1.40087, 1.39963, 1.39836, 1.39707, 1.39574, 1.39438, 1.39299, 1.39158, 1.39013, 1.38866, 1.38715, 1.38562, 1.38406, 1.38247, 1.38085, 1.37921, 1.37753, 1.37583, 1.3741, 1.37235, 1.37057, 1.36876, 1.36692, 1.36506, 1.36317, 1.36126, 1.35932, 1.35735, 1.35536, 1.35334, 1.3513, 1.34924, 1.34715, 1.34503, 1.34289, 1.34073, 1.33855, 1.33634, 1.33411, 1.33185, 1.32957, 1.32727, 1.32495, 1.32261, 1.32024, 1.31786, 1.31545, 1.31302, 1.31057, 1.3081, 1.30561, 1.3031, 1.30057, 1.29801, 1.29544, 1.29285, 1.29025, 1.28762, 1.28497, 1.28231, 1.27963, 1.27692, 1.27421, 1.27147, 1.26871, 1.26594, 1.26315, 1.26035, 1.25753, 1.25469, 1.25183, 1.24896, 1.24607, 1.24316, 1.24024, 1.2373, 1.23435, 1.23138, 1.2284, 1.2254, 1.22238, 1.21935, 1.2163, 1.21324, 1.21016, 1.20707, 1.20396, 1.20084, 1.1977, 1.19454, 1.19137, 1.18818, 1.18498, 1.18176, 1.17852, 1.17527, 1.172, 1.16871, 1.16541, 1.16209, 1.15875, 1.15539, 1.15201, 1.14861, 1.14519, 1.14175, 1.13829, 1.1348, 1.13129, 1.12776, 1.1242, 1.12062, 1.117, 1.11336, 1.10968, 1.10597, 1.10222, 1.09843, 1.0946, 1.09072, 1.0868, 1.08282, 1.07878, 1.07467, 1.07049, 1.06623, 1.06187, 1.05741, 1.05281, 1.04807, 1.04315, 1.03799, 1.03255, 1.02669, 1.02022, 1.01263, 1, 1.01263, 1.02022, 1.02669, 1.03255, 1.03799, 1.04315, 1.04807, 1.05281, 1.05741, 1.06187, 1.06623, 1.07049, 1.07467, 1.07878, 1.08282, 1.0868, 1.09072, 1.0946, 1.09843, 1.10222, 1.10597, 1.10968, 1.11336, 1.117, 1.12062, 1.1242, 1.12776, 1.13129, 1.1348, 1.13829, 1.14175, 1.14519, 1.14861, 1.15201, 1.15539, 1.15875, 1.16209, 1.16541, 1.16871, 1.172, 1.17527, 1.17852, 1.18176, 1.18498, 1.18818, 1.19137, 1.19454, 1.1977, 1.20084, 1.20396, 1.20707, 1.21016, 1.21324, 1.2163, 1.21935, 1.22238, 1.2254, 1.2284, 1.23138, 1.23435, 1.2373, 1.24024, 1.24316, 1.24607, 1.24896, 1.25183, 1.25469, 1.25753, 1.26035, 1.26315, 1.26594, 1.26871, 1.27147, 1.27421, 1.27692, 1.27963, 1.28231, 1.28497, 1.28762, 1.29025, 1.29285, 1.29544, 1.29801, 1.30057, 1.3031, 1.30561, 1.3081, 1.31057, 1.31302, 1.31545, 1.31786, 1.32024, 1.32261, 1.32495, 1.32727, 1.32957, 1.33185, 1.33411, 1.33634, 1.33855, 1.34073, 1.34289, 1.34503, 1.34715, 1.34924, 1.3513, 1.35334, 1.35536, 1.35735, 1.35932, 1.36126, 1.36317, 1.36506, 1.36692, 1.36876, 1.37057, 1.37235, 1.3741, 1.37583, 1.37753, 1.37921, 1.38085, 1.38247, 1.38406, 1.38562, 1.38715, 1.38866, 1.39013, 1.39158, 1.39299, 1.39438, 1.39574, 1.39707, 1.39836, 1.39963, 1.40087, 1.40208, 1.40325, 1.4044, 1.40552, 1.4066, 1.40765, 1.40868, 1.40967, 1.41063, 1.41156, 1.41245, 1.41332, 1.41415, 1.41496, 1.41573, 1.41646, 1.41717, 1.41784, 1.41849, 1.4191, 1.41967, 1.42022, 1.42073, 1.42121, 1.42166, 1.42208, 1.42246, 1.42281, 1.42313, 1.42342, 1.42367, 1.42389, 1.42408, 1.42424, 1.42437, 1.42446, 1.42452, 1.42455, 1.42454, 1.4245, 1.42444, 1.42434, 1.4242, 1.42404, 1.42384, 1.42361, 1.42335, 1.42306, 1.42274, 1.42239, 1.422, 1.42159, 1.42114, 1.42066, 1.42015, 1.41961, 1.41904, 1.41844, 1.41781, 1.41715, 1.41646, 1.41574, 1.41499, 1.41421, 1.41341, 1.41257, 1.4117, 1.41081, 1.40989, 1.40893, 1.40796, 1.40695, 1.40591, 1.40485, 1.40376, 1.40265, 1.4015, 1.40033, 1.39914, 1.39792, 1.39667, 1.39539, 1.3941, 1.39277, 1.39142, 1.39005, 1.38865, 1.38723, 1.38578, 1.38431, 1.38282, 1.3813, 1.37977, 1.3782, 1.37662, 1.37502, 1.37339, 1.37174, 1.37007, 1.36838, 1.36667, 1.36493, 1.36318, 1.36141, 1.35962, 1.35781, 1.35598, 1.35413, 1.35226, 1.35038, 1.34848, 1.34656, 1.34462, 1.34267, 1.3407, 1.33871, 1.33671, 1.33469, 1.33266, 1.33061, 1.32854, 1.32647, 1.32437, 1.32227, 1.32015, 1.31801, 1.31587, 1.31371, 1.31154, 1.30935, 1.30716, 1.30495, 1.30273, 1.3005, 1.29826, 1.29601, 1.29375, 1.29147, 1.28919, 1.2869, 1.2846, 1.28229, 1.27998, 1.27765, 1.27532, 1.27298, 1.27063, 1.26827, 1.26591, 1.26354, 1.26117, 1.25879, 1.2564, 1.254, 1.25161, 1.2492, 1.24679, 1.24438, 1.24196, 1.23954, 1.23711, 1.23469, 1.23225, 1.22982, 1.22738, 1.22494, 1.22249, 1.22005, 1.2176, 1.21515, 1.21269, 1.21024, 1.20779, 1.20533, 1.20287, 1.20042, 1.19796, 1.1955, 1.19305, 1.19059, 1.18813, 1.18568, 1.18322, 1.18077, 1.17831, 1.17586, 1.17341, 1.17096, 1.16852, 1.16607, 1.16363, 1.16119, 1.15875, 1.15632, 1.15389, 1.15146, 1.14903, 1.14661, 1.14419, 1.14178, 1.13937, 1.13696, 1.13456, 1.13216, 1.12977, 1.12738, 1.12499, 1.12261, 1.12024, 1.11787, 1.1155, 1.11314, 1.11079, 1.10844, 1.10609, 1.10376, 1.10142, 1.0991, 1.09678, 1.09446, 1.09216, 1.08986, 1.08756, 1.08527, 1.08299, 1.08072, 1.07845, 1.07619, 1.07394, 1.07169, 1.06945, 1.06722, 1.06499, 1.06277, 1.06056, 1.05836, 1.05617, 1.05398, 1.0518, 1.04963, 1.04746, 1.04531, 1.04316, 1.04102, 1.03889, 1.03677, 1.03465, 1.03254, 1.03044, 1.02835, 1.02627, 1.0242, 1.02214, 1.02008, 1.01803, 1.01599, 1.01396, 1.01194, 1.00993, 1.00793, 1.00593, 1.00394, 1.00197, 1, 0.998041, 0.996091, 0.99415, 0.992218, 0.990296, 0.988382, 0.986478, 0.984582, 0.982696, 0.980819, 0.978952, 0.977094, 0.975244, 0.973405, 0.971574, 0.969753, 0.967941, 0.966139, 0.964346, 0.962562, 0.960788, 0.959023, 0.957268, 0.955522, 0.953785, 0.952058, 0.950341, 0.948632, 0.946934, 0.945244, 0.943565, 0.941894, 0.940233, 0.938582, 0.93694, 0.935308, 0.933685, 0.932071, 0.930467, 0.928873, 0.927288, 0.925712, 0.924146, 0.922589, 0.921042, 0.919505, 0.917976, 0.916458, 0.914948, 0.913448, 0.911958, 0.910477, 0.909005, 0.907543, 0.90609, 0.904647, 0.903213, 0.901788, 0.900373, 0.898967, 0.897571, 0.896184, 0.894806, 0.893437, 0.892078, 0.890728, 0.889388, 0.888056, 0.886734, 0.885421, 0.884118, 0.882824, 0.881539, 0.880263, 0.878996, 0.877739, 0.87649, 0.875251, 0.874021, 0.8728, 0.871588, 0.870386, 0.869192, 0.868008, 0.866832, 0.865666, 0.864509, 0.86336, 0.862221, 0.861091, 0.859969, 0.858857, 0.857754, 0.856659, 0.855574, 0.854497, 0.853429, 0.85237, 0.85132, 0.850279, 0.849247, 0.848223, 0.847209, 0.846203, 0.845206, 0.844217, 0.843238, 0.842267, 0.841305, 0.840351, 0.839407, 0.838471, 0.837543, 0.836625, 0.835714, 0.834813, 0.83392, 0.833036, 0.83216, 0.831293, 0.830434, 0.829584, 0.828743, 0.82791, 0.827085, 0.826269, 0.825462, 0.824663, 0.823872, 0.82309, 0.822316, 0.821551, 0.820794, 0.820046, 0.819305, 0.818574, 0.81785, 0.817135, 0.816428, 0.81573, 0.81504, 0.814358, 0.813684, 0.813019, 0.812362, 0.811713, 0.811073, 0.810441, 0.809816, 0.809201, 0.808593, 0.807994, 0.807402, 0.806819, 0.806245, 0.805678, 0.805119, 0.804569, 0.804027, 0.803492, 0.802966, 0.802449, 0.801939, 0.801437, 0.800944, 0.800458, 0.799981, 0.799512, 0.79905, 0.798597, 0.798152, 0.797715, 0.797286, 0.796865, 0.796452, 0.796048, 0.795651, 0.795262, 0.794881, 0.794509, 0.794144, 0.793787, 0.793439, 0.793098, 0.792766, 0.792441, 0.792125, 0.791816, 0.791516, 0.791223, 0.790939, 0.790662, 0.790394, 0.790134, 0.789881, 0.789637, 0.789401, 0.789172, 0.788952, 0.78874, 0.788536, 0.78834, 0.788152, 0.787971, 0.787799, 0.787636, 0.78748, 0.787332, 0.787192, 0.787061, 0.786937, 0.786822, 0.786714, 0.786615, 0.786524, 0.786441, 0.786366, 0.786299, 0.786241, 0.78619, 0.786148, 0.786114, 0.786088, 0.786071, 0.786062, 0.78606, 0.786068, 0.786083, 0.786107, 0.786138, 0.786179, 0.786227, 0.786284, 0.78635, 0.786423, 0.786505, 0.786596, 0.786694, 0.786802, 0.786918, 0.787042, 0.787175, 0.787316, 0.787466, 0.787624, 0.787791, 0.787967, 0.788151, 0.788344, 0.788545, 0.788756, 0.788975, 0.789203, 0.789439, 0.789685, 0.789939, 0.790202, 0.790474, 0.790755, 0.791046, 0.791345, 0.791653, 0.79197, 0.792296, 0.792632, 0.792976, 0.79333, 0.793693, 0.794066, 0.794447, 0.794839, 0.795239, 0.795649, 0.796069, 0.796498, 0.796937, 0.797385, 0.797843, 0.798311, 0.798789, 0.799276, 0.799774, 0.800281, 0.800799, 0.801326, 0.801864, 0.802412, 0.80297, 0.803538, 0.804117, 0.804707, 0.805306, 0.805917, 0.806538, 0.80717, 0.807812, 0.808466, 0.80913, 0.809806, 0.810492, 0.81119, 0.811899, 0.81262, 0.813352, 0.814095, 0.814851, 0.815618, 0.816396, 0.817187, 0.81799, 0.818805, 0.819632, 0.820472, 0.821324, 0.822189, 0.823067, 0.823957, 0.824861, 0.825778, 0.826708, 0.827651, 0.828608, 0.829579, 0.830564, 0.831563, 0.832576, 0.833604, 0.834646, 0.835703, 0.836774, 0.837861, 0.838964, 0.840082, 0.841216, 0.842365, 0.843531, 0.844714, 0.845913, 0.84713, 0.848363, 0.849615, 0.850884, 0.852171, 0.853477, 0.854801, 0.856145, 0.857509, 0.858892, 0.860295, 0.86172, 0.863165, 0.864632, 0.866121, 0.867633, 0.869168, 0.870726, 0.872309, 0.873917, 0.87555, 0.877209, 0.878895, 0.880609, 0.882351, 0.884122, 0.885924, 0.887757, 0.889622, 0.891521, 0.893454, 0.895423, 0.897429, 0.899474, 0.901559, 0.903687, 0.905858, 0.908076, 0.910342, 0.91266, 0.915031, 0.917458, 0.919947, 0.922499, 0.925121, 0.927816, 0.93059, 0.933451, 0.936405, 0.939463, 0.942634, 0.945932, 0.949374, 0.95298, 0.956777, 0.9608, 0.9651, 0.969752, 0.974874, 0.98069, 0.987733, 1, 0.987733, 0.98069, 0.974874, 0.969752, 0.9651, 0.9608, 0.956777, 0.95298, 0.949374, 0.945932, 0.942634, 0.939463, 0.936405, 0.933451, 0.93059, 0.927816, 0.925121, 0.922499, 0.919947, 0.917458, 0.915031, 0.91266, 0.910342, 0.908076, 0.905858, 0.903687, 0.901559, 0.899474, 0.897429, 0.895423, 0.893454, 0.891521, 0.889622, 0.887757, 0.885924, 0.884122, 0.882351, 0.880609, 0.878895, 0.877209, 0.87555, 0.873917, 0.872309, 0.870726, 0.869168, 0.867633, 0.866121, 0.864632, 0.863165, 0.86172, 0.860295, 0.858892, 0.857509, 0.856145, 0.854801, 0.853477, 0.852171, 0.850884, 0.849615, 0.848363, 0.84713, 0.845913, 0.844714, 0.843531, 0.842365, 0.841216, 0.840082, 0.838964, 0.837861, 0.836774, 0.835703, 0.834646, 0.833604, 0.832576, 0.831563, 0.830564, 0.829579, 0.828608, 0.827651, 0.826708, 0.825778, 0.824861, 0.823957, 0.823067, 0.822189, 0.821324, 0.820472, 0.819632, 0.818805, 0.81799, 0.817187, 0.816396, 0.815618, 0.814851, 0.814095, 0.813352, 0.81262, 0.811899, 0.81119, 0.810492, 0.809806, 0.80913, 0.808466, 0.807812, 0.80717, 0.806538, 0.805917, 0.805306, 0.804707, 0.804117, 0.803538, 0.80297, 0.802412, 0.801864, 0.801326, 0.800799, 0.800281, 0.799774, 0.799276, 0.798789, 0.798311, 0.797843, 0.797385, 0.796937, 0.796498, 0.796069, 0.795649, 0.795239, 0.794839, 0.794447, 0.794066, 0.793693, 0.79333, 0.792976, 0.792632, 0.792296, 0.79197, 0.791653, 0.791345, 0.791046, 0.790755, 0.790474, 0.790202, 0.789939, 0.789685, 0.789439, 0.789203, 0.788975, 0.788756, 0.788545, 0.788344, 0.788151, 0.787967, 0.787791, 0.787624, 0.787466, 0.787316, 0.787175, 0.787042, 0.786918, 0.786802, 0.786694, 0.786596, 0.786505, 0.786423, 0.78635, 0.786284, 0.786227, 0.786179, 0.786138, 0.786107, 0.786083, 0.786068, 0.78606, 0.786062, 0.786071, 0.786088, 0.786114, 0.786148, 0.78619, 0.786241, 0.786299, 0.786366, 0.786441, 0.786524, 0.786615, 0.786714, 0.786822, 0.786937, 0.787061, 0.787192, 0.787332, 0.78748, 0.787636, 0.787799, 0.787971, 0.788152, 0.78834, 0.788536, 0.78874, 0.788952, 0.789172, 0.789401, 0.789637, 0.789881, 0.790134, 0.790394, 0.790662, 0.790939, 0.791223, 0.791516, 0.791816, 0.792125, 0.792441, 0.792766, 0.793098, 0.793439, 0.793787, 0.794144, 0.794509, 0.794881, 0.795262, 0.795651, 0.796048, 0.796452, 0.796865, 0.797286, 0.797715, 0.798152, 0.798597, 0.79905, 0.799512, 0.799981, 0.800458, 0.800944, 0.801437, 0.801939, 0.802449, 0.802966, 0.803492, 0.804027, 0.804569, 0.805119, 0.805678, 0.806245, 0.806819, 0.807402, 0.807994, 0.808593, 0.809201, 0.809816, 0.810441, 0.811073, 0.811713, 0.812362, 0.813019, 0.813684, 0.814358, 0.81504, 0.81573, 0.816428, 0.817135, 0.81785, 0.818574, 0.819305, 0.820046, 0.820794, 0.821551, 0.822316, 0.82309, 0.823872, 0.824663, 0.825462, 0.826269, 0.827085, 0.82791, 0.828743, 0.829584, 0.830434, 0.831293, 0.83216, 0.833036, 0.83392, 0.834813, 0.835714, 0.836625, 0.837543, 0.838471, 0.839407, 0.840351, 0.841305, 0.842267, 0.843238, 0.844217, 0.845206, 0.846203, 0.847209, 0.848223, 0.849247, 0.850279, 0.85132, 0.85237, 0.853429, 0.854497, 0.855574, 0.856659, 0.857754, 0.858857, 0.859969, 0.861091, 0.862221, 0.86336, 0.864509, 0.865666, 0.866832, 0.868008, 0.869192, 0.870386, 0.871588, 0.8728, 0.874021, 0.875251, 0.87649, 0.877739, 0.878996, 0.880263, 0.881539, 0.882824, 0.884118, 0.885421, 0.886734, 0.888056, 0.889388, 0.890728, 0.892078, 0.893437, 0.894806, 0.896184, 0.897571, 0.898967, 0.900373, 0.901788, 0.903213, 0.904647, 0.90609, 0.907543, 0.909005, 0.910477, 0.911958, 0.913448, 0.914948, 0.916458, 0.917976, 0.919505, 0.921042, 0.922589, 0.924146, 0.925712, 0.927288, 0.928873, 0.930467, 0.932071, 0.933685, 0.935308, 0.93694, 0.938582, 0.940233, 0.941894, 0.943565, 0.945244, 0.946934, 0.948632, 0.950341, 0.952058, 0.953785, 0.955522, 0.957268, 0.959023, 0.960788, 0.962562, 0.964346, 0.966139, 0.967941, 0.969753, 0.971574, 0.973405, 0.975244, 0.977094, 0.978952, 0.980819, 0.982696, 0.984582, 0.986478, 0.988382, 0.990296, 0.992218, 0.99415, 0.996091, 0.998041, 1
        ];
        for (var i = 0; i < rads.length; i++) {
            var psi = i/(rads.length-1)*2*Math.PI;
            vertices[0].push( [rads[i]*Math.cos(psi), rads[i]*Math.sin(psi), 0.0] );
        }
        break;
    }
    for (var j = 0; j < vertices.length; j++) {
        for (var i = 0; i < vertices[j].length-1; i++) {
            primitives.push({class:"line", text: "", arr0:vertices[j][i], arr1:vertices[j][i+1], rad:arrRad, color:[0.0, 0.0, 1.0, 1.0]});
        }
    }
}